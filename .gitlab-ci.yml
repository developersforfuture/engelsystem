image: php

variables:
  DOCKER_DRIVER: overlay2
  REGISTRY: registry.gitlab.com
  REPOSITORY_PATH: developersforfuture/engelsystem
  COMPOSE_PROJECT_NAME: engelsystem
  CONTAINER_IMAGE: ${REGISTRY}/${REPOSITORY_PATH}/app
  VERSION_TAG: latest
  RUNTIME: ci
  MYSQL_DATABASE: engelsystem
  MYSQL_USER: engel
  MYSQL_PASSWORD: engelsystem
  MYSQL_HOST: mariadb
  MYSQL_RANDOM_ROOT_PASSWORD: "yes"
  DOCROOT: /app/src/

stages:
  - build-ci
  - test
  - release
  - deploy

.docker_template: &build_docker_definition
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache python3 curl git make m4
    - curl -L -o /usr/local/bin/dobi "https://github.com/dnephin/dobi/releases/download/v0.12.0/dobi-$(uname -s)"; chmod +x /usr/local/bin/dobi
    - make docker_login
  script:
    - make build
    - make push
  after_script:
    - make docker_logout

build-image.ci:
  <<: *build_docker_definition
  stage: build-ci
  only: [branches]
  variables:
    RUNTIME: 'ci'

test:
  image: ${CONTAINER_IMAGE}-ci:${VERSION_TAG}
  stage: test
  services:
    - mariadb:10.2
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 1 week
    when: always
    paths:
      - ./coverage/
      - ./unittests.xml
    reports:
      junit: ./unittests.xml
  coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'
  before_script:
    - apk add ${PHPIZE_DEPS} && pecl install xdebug-beta && docker-php-ext-enable xdebug
    - curl -sS https://getcomposer.org/installer | php -- --no-ansi --install-dir /usr/local/bin/ --filename composer
    - cp -R tests/ phpunit.xml "${DOCROOT}"
    - export HOMEDIR=$(pwd)
    - cd "${DOCROOT}"
    - composer --no-ansi install --dev
    - ./bin/migrate
  script:
    - vendor/bin/phpunit -v --colors never --coverage-text --coverage-html "${HOMEDIR}/coverage/" --log-junit "${HOMEDIR}/unittests.xml"
    - bin/migrate down

release-image.prodction:
  <<: *build_docker_definition
  stage: release
  only: [master]
  variables:
    RUNTIME: 'production'

.deploy_template: &deploy_definition
  stage: deploy
  script: echo "deploy production"

deploy.production:
  <<: *deploy_definition
  environment:
    name: runtime/${RUNTIME}
    url: https://engelsystem.developersforfuture.org
  when: manual
  only:
    - tags
  variables:
    RUNTIME: 'production'
